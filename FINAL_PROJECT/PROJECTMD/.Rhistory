for (j in 1:5) {
pca_dataset <- dataset[1:4000, 2:length(dataset[1, ])]
labels <- dataset[1:4000, 1]
pca <- prcomp(pca_dataset,
retx = TRUE,
center = TRUE,
scale = TRUE)
range_max <- max(pca$x[, j])
range_min <- min(pca$x[, j])
value_range <- range_max - range_min #have the range distance
#Take five first pca
steps = 20
cuts <- seq(min(pca$x[, j]), max(pca$x[, j]), length.out = steps)
inf_gain_table <- vector(mode="numeric", length=steps)
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/exercise_4.R')
xzckugyo8
∞ƒSD
i <- 10
t = cuts[i]
below_range <- first_pca < t
above_range <- first_pca >= t
before_entropy <- table(labels) / length(labels)
#calculate the after entropy for the elements below the threshold
pro <- table(labels) / length(labels)
pro
before_entropy <- sum(-pro * log2(pro), na.rm =T)
pro <-
table(labels[below_range]) / length(labels[below_range]) #probability table for every digit
pro
pro <-
table(labels[above_range]) / length(labels[above_range]) #probability table for every digit
table(labels[below_range]) / length(labels[below_range]) #probability table for every digit
after_entropy_below <- sum(-pro * log2(pro), na.rm =T)
after_entropy
pro <-
table(labels[below_range]) / length(labels[below_range]) #probability table for every digit
pro
after_entropy_below <- sum(-pro * log2(pro), na.rm =T)
after_entropy_below
pro <-
table(labels[above_range]) / length(labels[above_range]) #probability table for every digit
after_entropy_above <- sum(-pro * log2(pro), na.rm =T)
after_entropy =( (length(below_range) * after_entropy_below)  +
(length(above_range) * after_entropy_above) ) / length(labels)
after_entropy
length(below_range)
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/exercise_4.R')
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/decision_tree.R')
fit <- C5.0(train, as.factor(trainlabels))
fit
summary(fit)
confusion <- confusionMatrix(pred, testlabels)
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/decision_tree.R')
confusion <- CrossTable(testlabels, pred, prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,
dnn=c('actual','predicted'))
confusion
confusion$t
plot(fit)
plot(fit, subtree = 5)
plot(fit, subtree = 5)
plot(fit, subtree = 3)
fit2 <- C5.0(train[,2:5], as.factor(trainlabels))
plot(fit)
plot(fit2
)
fit2 <- C5.0(train[,2:4], as.factor(trainlabels))
plot(fit2, subtree = 3)
fit2 <- C5.0(train[,2:4], as.factor(trainlabels))
plot(fit2, subtree = 3)
plot(fit2, subtree = 3)
p_i_train_set<-person_independent[persons[i]:persons[i+1],-1]
person_independent<-dataset
p_i_train_labels<-person_independent[persons[i]:persons[i+1],1]
persons<-seq(1,64000,by=4000)
p_i_train_set<-person_independent[persons[i]:persons[i+1],-1]
persons
persons[1]
persons[2]
persons[2+1]
persons[i]
i
length(var_k)
var_k <- list(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
length(var_k)
length of accuracies
length(accuracies)
accuracies  <- list(1:length(var_k))
var_k_time <- list(1:length(var_k))
length(accuracies)
accuracies
accuracies[i]
accuracies[1]
var_k <- list(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
accuracies  <- c(1:length(var_k))
var_k_time <- c(1:length(var_k))
length(accuracies)
i
length(var_k)
var_k <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)
var_k
length(var_k)
i=1
p_i_train_set<-person_independent[persons[i]:persons[i+1],-1]
p_i_train_labels<-person_independent[persons[i]:persons[i+1],1]
length(p_i_train_labels)
p_i_test_set<-person_independent[-(persons[i]:persons[i+1]),-1]
p_i_test_labels<-person_independent[-(persons[i]:persons[i+1]),1]
length(p_i_test_labels)
p_i_test_labels<-person_independent[-(persons[i]:persons[i+1]-1),1]
length(p_i_test_labels)
i=3
length(p_i_test_labels)
length(person_independent)
length(person_independent[,1])
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/decision_tree.R')
p_i_train_set
person_independent<-dataset
p_i_train_set<-person_independent[persons[i]:persons[i+1]-1,-1]
p_i_train_set
person_independent
View(person_independent)
View(person_independent)
View(person_independent)
View(person_independent)
persons[i]
persons<-seq(1,5200,by=4000)
persons
persons<-seq(1,5200,by=3999)
persons
var_k <- c(1,2,3,4,5,6,7,8,9,10,11,12)
accuracies  <- c(1:length(var_k))
var_k_time <- c(1:length(var_k))
persons<-seq(1,5200,by=3999)
person_independent<-dataset
for (i in 1:length(var_k)){
#run it with person independent for all 16 persons - 50% train / 50% test - 10 cross-validation
p_i_train_set<-person_independent[persons[i]:persons[i+1]-1,-1]
p_i_train_labels<-person_independent[persons[i]:persons[i+1]-1,1]
p_i_test_set<-person_independent[-(persons[i]:persons[i+1]-1),-1]
p_i_test_labels<-person_independent[-(persons[i]:persons[i+1]-1),1]
start.time <- Sys.time()
p_i_fit <- C5.0(p_i_train_set, as.factor(p_i_train_labels))
time.taken <- Sys.time() - start.time #difftime
var_k_time[i] <- time.taken
p_i_pred <- predict(p_i_fit, p_i_test_set)
confusionmat<-confusionMatrix(p_i_pred,p_i_test_labels)
accuracies[i] <- confusionmat$overall['Accuracy']
}
plot1 <- qplot(unlist(var_k), unlist(accuracies), geom = "line",xlab="k values",ylab="accuracies") + ggtitle("Accuracy for k number of experiment")
plot2 <- qplot(unlist(var_k), unlist(var_k_time), geom = "line",xlab="k values",ylab="times (minutes)")+ ggtitle("Classification time for k number of experiment")
multiplot(plot1, plot2)
accuracies
accuracies
length(accuracies)
accuracies[3]
var_k_time
var_k <- c(1:12)
accuracies  <- c(1:length(var_k))
var_k_time <- c(1:length(var_k))
persons<-seq(1,5200,by=3999)
person_independent<-dataset
for (i in 1:length(var_k)){
#run it with person independent for all 16 persons - 50% train / 50% test - 10 cross-validation
p_i_train_set<-person_independent[persons[i]:persons[i+1]-1,-1]
p_i_train_labels<-person_independent[persons[i]:persons[i+1]-1,1]
p_i_test_set<-person_independent[-(persons[i]:persons[i+1]-1),-1]
p_i_test_labels<-person_independent[-(persons[i]:persons[i+1]-1),1]
start.time <- Sys.time()
p_i_fit <- C5.0(p_i_train_set, as.factor(p_i_train_labels))
time.taken <- Sys.time() - start.time #difftime
var_k_time[i] <- time.taken
p_i_pred <- predict(p_i_fit, p_i_test_set)
confusionmat<-confusionMatrix(p_i_pred,p_i_test_labels)
accuracies[i] <- confusionmat$overall['Accuracy']
}
plot1 <- qplot(unlist(var_k), unlist(accuracies), geom = "line",xlab="k values",ylab="accuracies") + ggtitle("Accuracy for k number of experiment")
plot2 <- qplot(unlist(var_k), unlist(var_k_time), geom = "line",xlab="k values",ylab="times (minutes)")+ ggtitle("Classification time for k number of experiment")
multiplot(plot1, plot2)
persons
var_k <- c(1:12)
accuracies  <- c(1:length(var_k))
var_k_time <- c(1:length(var_k))
persons<-seq(1,52000,by=3999)
person_independent<-dataset
for (i in 1:length(var_k)){
#run it with person independent for all 16 persons - 50% train / 50% test - 10 cross-validation
p_i_train_set<-person_independent[persons[i]:persons[i+1]-1,-1]
p_i_train_labels<-person_independent[persons[i]:persons[i+1]-1,1]
p_i_test_set<-person_independent[-(persons[i]:persons[i+1]-1),-1]
p_i_test_labels<-person_independent[-(persons[i]:persons[i+1]-1),1]
start.time <- Sys.time()
p_i_fit <- C5.0(p_i_train_set, as.factor(p_i_train_labels))
time.taken <- Sys.time() - start.time #difftime
var_k_time[i] <- time.taken
p_i_pred <- predict(p_i_fit, p_i_test_set)
confusionmat<-confusionMatrix(p_i_pred,p_i_test_labels)
accuracies[i] <- confusionmat$overall['Accuracy']
}
plot1 <- qplot(unlist(var_k), unlist(accuracies), geom = "line",xlab="k values",ylab="accuracies") + ggtitle("Accuracy for k number of experiment")
plot2 <- qplot(unlist(var_k), unlist(var_k_time), geom = "line",xlab="k values",ylab="times (minutes)")+ ggtitle("Classification time for k number of experiment")
multiplot(plot1, plot2)
persons
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/random_forest.R')
package.install(randomForest)
packages.install(randomForest)
install.packages("randomForest")
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/random_forest.R')
source('Desktop/ML/Machine_Learning/EXERCISE_4/load_dataset.R')
dataset
source('Desktop/ML/Machine_Learning/EXERCISE_4/load_dataset.R')
dataset
View(dataset)
View(dataset)
View(dataset)
source('Desktop/ML/Machine_Learning/EXERCISE_4/load_dataset.R')
dataset
View(dataset)
View(dataset)
View(dataset)
persons<-seq(0,64000,by=4000)
persons[1]=1
persons
var_k <- c(1:15)
accuracies  <- c(1:length(var_k))
var_k_time <- c(1:length(var_k))
persons<-seq(0,64000,by=4000)
persons[1]=1
person_independent<-dataset
for (i in 1:length(var_k)){
#run it with person independent for all 16 persons - 50% train / 50% test - 10 cross-validation
p_i_train_set<-person_independent[persons[i]:persons[i+1]-1,-1]
p_i_train_labels<-person_independent[persons[i]:persons[i+1]-1,1]
p_i_test_set<-person_independent[-(persons[i]:persons[i+1]-1),-1]
p_i_test_labels<-person_independent[-(persons[i]:persons[i+1]-1),1]
start.time <- Sys.time()
p_i_fit <- C5.0(p_i_train_set, as.factor(p_i_train_labels))
time.taken <- Sys.time() - start.time #difftime
var_k_time[i] <- time.taken
p_i_pred <- predict(p_i_fit, p_i_test_set)
confusionmat<-confusionMatrix(p_i_pred,p_i_test_labels)
accuracies[i] <- confusionmat$overall['Accuracy']
}
plot1 <- qplot(unlist(var_k), unlist(accuracies), geom = "line",xlab="k values",ylab="accuracies") + ggtitle("Accuracy for k number of experiment")
plot2 <- qplot(unlist(var_k), unlist(var_k_time), geom = "line",xlab="k values",ylab="times (minutes)")+ ggtitle("Classification time for k number of experiment")
multiplot(plot1, plot2)
source('Desktop/ML/Machine_Learning/EXERCISE_4/load_dataset.R') #load the whole dataset
var_k <- c(1:15)
accuracies  <- c(1:length(var_k))
var_k_time <- c(1:length(var_k))
persons<-seq(0,64000,by=4000)
persons[1]=1
person_independent<-dataset
for (i in 1:length(var_k)){
#run it with person independent for all 16 persons - 50% train / 50% test - 10 cross-validation
p_i_train_set<-person_independent[persons[i]:persons[i+1]-1,-1]
p_i_train_labels<-person_independent[persons[i]:persons[i+1]-1,1]
p_i_test_set<-person_independent[-(persons[i]:persons[i+1]-1),-1]
p_i_test_labels<-person_independent[-(persons[i]:persons[i+1]-1),1]
start.time <- Sys.time()
p_i_fit <- C5.0(p_i_train_set, as.factor(p_i_train_labels))
time.taken <- Sys.time() - start.time #difftime
var_k_time[i] <- time.taken
p_i_pred <- predict(p_i_fit, p_i_test_set)
confusionmat<-confusionMatrix(p_i_pred,p_i_test_labels)
accuracies[i] <- confusionmat$overall['Accuracy']
}
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/decision_tree.R')
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/decision_tree.R')
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/exercise_4.R')
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/exercise_4.R')
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/exercise_4.R')
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/exercise_4.R')
View(pca_dataset)
View(pca_dataset)
cuts
pro
source('~/Desktop/ML/Machine_Learning/EXERCISE_4/exercise_4.R')
p_i_dep
rm(list=ls())
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/loadImage.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/loadImage.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index
person_index[0]<-1
person_index
person_index[1]<-1
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(person_index)
length(person_index)-1
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
individual_prediction
single_person<-cbind(single_person_labels,single_person)
single_person[,1]
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
individual_person_test[,1]
length(individual_prediction)
length(individual_person_test)
length(individual_person_test[,1])
length(individual_person_test[1,])
single_person_pca[1,]
single_person[1,]
single_person
single_person[1,]
length(single_person[1,])
length(single_person[,1])
length(knn_results)
length(individual_person)
length(individual_person[,1])
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
i
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
i=2
person_index[i]
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(individual_person)/2
individual_person
length(individual_person)
length(individual_person[1,])
length(individual_person[,1])
length(person_index)
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index[i+1]+1
print(length(individual_person[,1]))
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index<-seq(1, length(dataset[,1]),3999)
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index
length(dataset[,1]
)
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
person_index
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(individual_person_test)
length(individual_person_test[,1])
length(individual_person_test[,1])
length(individual_person)
length(individual_person[,1])
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(individual_person_test)
length(individual_person_test[,1])
length(individual_person_train[,1])
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(individual_person_train)
length(individual_person_train[,1])
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(individual_person_train[,1])
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(individual_person_train[,1])
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(individual_person_train[,1])
length(individual_person_train[,-1])
length(individual_person_train[,1])
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
2:length(dataset[,1])
length(dataset[1,])
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length( individual_person_test[,1])
length(individual_prediction)
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(individual_person_test[,1:length(dataset[1,]))
length(individual_person_test[,1:length(dataset[1,]]))
length(individual_person_test[,1:length(dataset[1,]))
length(individual_person_test[,1:length(dataset[1,])])
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
single_person[,1]
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
single_person[,1]
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(single_person_pca)
length(single_person_pca[,1])
length(single_person_pca[,1])
length(single_person_pca[1])
length(single_person_pca[2])
length(single_person_pca[3])
length(dataset[1,]
)
2:length(dataset[1,]
)
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
length(single_person)
View(single_person)
View(single_person)
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
individual_person_test[,1]
length(individual_person_test[,1])
individual_person
individual_prediction
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('Desktop/ML/Machine_Learning/FinalProject/load_dataset.R') #load data for all the persons
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
rm(list=ls())
source('Desktop/ML/Machine_Learning/FinalProject/load_dataset.R') #load data for all the persons
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('Desktop/ML/Machine_Learning/FinalProject/load_dataset.R') #load data for all the persons
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
source('Desktop/ML/Machine_Learning/FinalProject/load_dataset.R') #load data for all the persons
source('Desktop/ML/Machine_Learning/FinalProject/load_dataset.R') #load data for all the persons
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
list(1) #8 #omitted member 2 and 3, as member 2 did not do it correctly
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
single_person<-dataset
source('~/Desktop/ML/Machine_Learning/FinalProject/load_dataset.R')
source('~/Desktop/ML/Machine_Learning/FinalProject/pca_knn.R')
warnings()
i
j
for(j in 1:runs){
for(i in 1:length(var_k)){
start.time <- Sys.time()
#running knn with k = var_k(i)
test_pred <- knn(train = training_class[,-1], test = test_class[,-1],
cl = training_class[,1], k = var_k[i])
time.taken <- Sys.time() - start.time #difftime
#create confusion matrix and add accuracy to list
confusion <- confusionMatrix(test_pred, test_class[,1])
var_acc[j,i] <- confusion$overall['Accuracy']
var_time[j,i]<- time.taken
}
}
var_acc
